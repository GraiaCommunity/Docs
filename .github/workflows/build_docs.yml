name: Build Docs
on:
  push:
    branches: [remake]
jobs:
  build_docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: |
          python3 -m pip install brotli fonttools
          python3 scripts/minfont.py

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '>=18'
          cache: 'pnpm'

      - name: Build docs
        run: |
          pnpm install
          pnpm build

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: page_dist
          path: docs/.vitepress/dist

  upload2cos:
    needs: [build_docs]
    if: ${{ false }}
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: page_dist
          path: dist

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install coscmd
        run: python3 -m pip install coscmd

      - name: Upload dist
        run: |
          coscmd config -a ${{ secrets.SecretId }} -s ${{ secrets.SecretKey }} -b graiax-1257296418 -r ap-hongkong
          coscmd upload -rs --delete -y dist/ /

  upload2a60:
    needs: [build_docs]
    if: ${{ false }}
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: page_dist
          path: dist

      - name: Upload ftp
        uses: SamKirkland/FTP-Deploy-Action@4.3.2
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./dist/

  upload2netlify:
    needs: [build_docs]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: page_dist
          path: dist

      - name: Deploy to Netlify Production
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=dist --prod
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_DEV_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
